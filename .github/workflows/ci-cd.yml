name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      if: github.event_name == 'push'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    
    - name: Build and test Flask app
      run: |
        cd flask-app
        docker build -t flask-test .
        docker run --rm -d -p 5000:5000 --name flask-test flask-test
        sleep 10
        curl -f http://localhost:5000/ || exit 1
        docker stop flask-test
    
    - name: Build and push Flask image
      if: github.event_name == 'push'
      uses: docker/build-push-action@v5
      with:
        context: ./flask-app
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/flask-app:latest
          ${{ secrets.DOCKER_USERNAME }}/flask-app:${{ github.sha }}

    - name: Build and test Spring Boot app
      run: |
        cd springboot-app
        docker build -t springboot-test .
        docker run --rm -d -p 8080:8080 --name springboot-test springboot-test
        sleep 30
        curl -f http://localhost:8080/api/ || exit 1
        docker stop springboot-test
    
    - name: Build and push Spring Boot image
      if: github.event_name == 'push'
      uses: docker/build-push-action@v5
      with:
        context: ./springboot-app
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/springboot-app:latest
          ${{ secrets.DOCKER_USERNAME }}/springboot-app:${{ github.sha }}
